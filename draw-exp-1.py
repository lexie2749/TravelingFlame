import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import interp1d

def draw_exp():
    x = np.array([
        1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1,
        2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9,
        3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7
    ])

    y_6cm = np.array([35.45636375, 36.66064094, 36.66603762, 37.54104429, 32.84562329, 34.58782658, 36.098698033, 37.566002307, 32.17514476, 33.38741198, 32.98672286, 35.42072056, 32.81145332, 37.99136035, 34.58586073, 31.64633801, 26.44962659, 24.1022295, 25.97922404, 23.92772311, 17.90481832, 17.90481832, 20.65841807])
    y_7cm = np.array([31.8958920, 29.27171101, 25.349434157, 25.242573904, 25.22000769, 21.72934919, 26.780224725, 25.13274123, 27.66346864, 24.78367538, 22.1656815, 18.56345116, 18.56345116, 18.99869686, 15.17182934, 16.39034764, 16.81877526, 14.90969758, 15.18816778, 18.16769715, 19.5902728, 13.78276146, 17.09251838])
    y_8cm = np.array([27.19536209, 24.60914245, 25.32351912, 22.57663726, 25.4510385, 27.857558854, 26.894050545, 18.03885048, 17.50508271, 24.9582083, 24.9582083, 16.11226879, 15.1863978, 16.43959328, 24.79851637, 19.77189692, 16.53649921, 22.84862487, 22.84862487, 17.73037486, 13.85107316, 16.21653868, 15.85368444])
    y_9cm = np.array([29.75712713, 23.12770624, 26.0712864, 25.83013632, 24.94970384, 15.19463114, 18.708411477, 19.433504607, 15.19435278, 14.9969032, 14.50163276, 14.50163276, 12.84883583, 18.69353047, 12.83954903, 12.81020154, 16.61887472, 15.24869683, 17.10422209, 12.75137202, 18.14070441, 12.16542668, 14.49419279])
    y_10cm = np.array([23.46489197, 25.2554705, 20.50429642, 22.72926801, 24.81500412, 14.85559317, 14.11117268, 12.47587206, 14.32333539, 12.74378473, 18.87445304, 19.86273701, 11.56125262, 12.92346734, 18.59978652, 12.05397031, 13.00497687, 11.95531963, 14.83493688, 14.1547924, 13.60070738, 12.55665279, 12.55665279])
    y_11cm = np.array([22.23545859, 21.25118127, 18.76873772, 19.409377997, 14.39962445, 19.53023433, 19.66851811, 13.30813555, 15.70796327, 17.288646724, 12.74090354, 16.93888465, 11.65662007, 11.5230778, 7.479218773, 12.03449853, 11.0743759, 11.26142418, 10.2306699, 18.13713785, 11.37136146, 10.78712598, 9.923881714])
    y_12cm = np.array([15.06800921, 15.06800921, 15.06800921, 15.54929697, 16.642944117, 15.37232303, 18.10697389, 18.290313947, 10.794482, 9.504968764, 16.02529586, 10.40319405, 11.06772184, 13.25358266, 11.51205465, 11.94486601, 10.56415698, 12.84629959, 13.83903868, 11.5850767, 12.92079418, 12.92079418, 12.92079418])
    y_13cm = np.array([13.72674432, 13.72674432, 13.72674432, 14.588778556, 22.588778556, 17.58550119, 14.75992641, 10.50102652, 17.92437434, 11.35047139, 10.64925408, 11.42749994, 11.39128687, 11.94091352, 14.44643646, 9.598255048, 15.74392535, 14.19624634, 11.83826554, 13.68688761, 9.679905366, 5.156688721, 4.679905366])
    y_14cm = np.array([12.02658891, 15.02658891, 13.27638127, 15.08604418, 14.31410881, 9.730932917, 8.991674507, 15.0871706, 15.17644244, 9.456811897, 10.42749994, 8.383052423, 10.59135341, 11.35545387, 10.04271787, 6.556931285, 10.55607944, 11.43397852, 7.56989154, 8.024987458, 10.5757913, 10.5757913, 8.024987458])
    y_15cm = np.array([11.74414575, 13.74414575, 13.74414575, 13.74414575, 14.4256918, 14.7043659, 14.3312223, 14.07975084, 8.485577046, 9.270051226, 14.92642762, 14.80280264, 11.62186271, 10.48446097, 12.12132034, 9.120134702, 12.04022654, 10.7380792, 11.39001319, 10.2347262, 10.2347262, 10.2347262, 10.2347262])

    error_6cm = np.array([0.839211222, 0, 0.15182191, 1.226569879, 0.829414054, 1.036048615, 1.076479648, 1.127998613, 0.148096098, 0.49365366, 0, 0.505995001, 1.169959174, 0.246640497, 0.526597763, 0.31262776, 0.645055107, 2.103905001, 0.296096057, 0.132281663, 0.326588616, 0.326588616, 0.345842809])
    error_7cm = np.array([0.839211222, 0, 0.15182191, 1.226569879, 0.829414054, 1.036048615, 1.076479648, 1.127998613, 0.148096098, 0.49365366, 0, 0.505995001, 1.169959174, 0.246640497, 0.526597763, 0.31262776, 0.645055107, 2.103905001, 0.296096057, 0.132281663, 0.326588616, 0.326588616, 0.345842809])
    error_8cm = np.array([0.703456465, 0.357898903, 0.124467526, 0.087977695, 0.532537031, 1.244791651, 0.336918623, 0.67530707, 1.609902106, 0.098730732, 0.098730732, 0.026360612, 0.344828116, 0.39862533, 0.034714959, 0.140498737, 0.263610249, 0.02082478, 0.02082478, 0.441923248, 0.540444732, 0.400526313, 0.282197368])
    error_9cm = np.array([0.466502709, 0.488392761, 0.389481932, 0.21720761, 0.431242803, 0.230865017, 1.12072598, 0, 0.271253391, 0.275679161, 0.180020087, 0.180020087, 0.151836648, 0.033330261, 0.550847774, 0.201596614, 0.103446359, 0.401656432, 0.220671793, 0.476723978, 0.111948309, 0.158962649, 0.040650029])
    error_10cm = np.array([0.100418385, 0.482144797, 0.099611268, 1.334347536, 0.274901329, 0.360224288, 0.194338317, 0.244063355, 0.093376474, 0.46083958, 0.374502559, 0.025067733, 0.019507959, 0.130536993, 0.278130079, 0.000447991, 0.112665961, 0.369730417, 0.290745931, 0.419958242, 0.380357553, 0.287953873, 0.412413796])
    error_11cm = np.array([0.603028305, 0.020153326, 0.053320689, 0.037024024, 0.94396337, 0.582464761, 0, 0.141073284, 0.07187282, 0.58004305, 0.229617947, 0.103667269, 0.10241018, 0.123741765, 0.225224076, 0.200923257, 0.204233471, 0.108740878, 0.13829194, 0.375288186, 0.992619712, 0.148442749, 0.257213296])
    error_12cm = np.array([0.096504766, 0.096504766, 0.139549052, 0.271573616, 0.122459445, 0.12760414, 0.40050974, 1.794482, 0.401334024, 0.061942798, 0.112458874, 0.151290963, 0.276245072, 0.426670807, 0.083599639, 0.147634435, 0.199202392, 0.05472855, 0.182460531, 0.07642445, 0.07642445, 0.07642445, 0.412413796])
    error_13cm = np.array([0.096504766, 1.130841194, 0.566725585, 0.569526826, 0.632300163, 1.145059653, 0.070484101, 0.128653795, 0.610135109, 0.887932123, 0.282775324, 0.156282782, 0.256932337, 0.175278493, 0.105981392, 0.04702946, 0.342139428, 0.202235063, 0.187025546, 0.20671681, 0.226886085, 0.226886085, 0.412413796])
    error_14cm = np.array([0.096504766, 0.175818907, 0.407624069, 0.063808321, 0.126696181, 0.125192831, 0.188919281, 0.088995037, 0.073403708, 0.181046107, 0.151290963, 0.146824529, 0.196497936, 0.068097175, 0.037024024, 0.268088484, 0.015013859, 0.255726143, 0.117867702, 0.757022952, 0.757022952, 0.757022952, 0.757022952])
    error_15cm= np.array([0.096504766, 0.096504766, 0.096504766, 0.102834018, 0.073614462, 0.801325031, 0.368215771, 0.124703455, 0.128759154, 0.075559803, 0.060365211, 0.362917289, 0.686827119, 0.417338656, 0.037024024, 0.103762173, 0.256213654, 0.114008949, 0.328226373, 0.04165983, 0.04165983, 0.757022952, 0.757022952])
    
    data = {
        '6cm': {'y': y_6cm, 'error': error_6cm},
        '7cm': {'y': y_7cm, 'error': error_7cm},
        '8cm': {'y': y_8cm, 'error': error_8cm},
        '9cm': {'y': y_9cm, 'error': error_9cm},
        '10cm': {'y': y_10cm, 'error': error_10cm},
        '11cm': {'y': y_11cm, 'error': error_11cm},
        '12cm': {'y': y_12cm, 'error': error_12cm},
        '13cm': {'y': y_13cm, 'error': error_13cm},
        '14cm': {'y': y_14cm, 'error': error_14cm},
        '15cm': {'y': y_15cm, 'error': error_15cm}
    }

    plt.figure(figsize=(12, 8))
    
    x_smooth = np.linspace(x.min(), x.max(), 300)
    
    # 获取数据系列的个数
    num_series = len(data)
    
    # 使用 'Greys' colormap，并调整颜色范围以获得更好的对比度
    # 从 0.3 到 0.9 之间取值，避免纯白和纯黑
    colors = plt.cm.get_cmap('Greys')(np.linspace(0.3, 0.9, num_series)) 
    
    for i, (label, values) in enumerate(data.items()):
        color = colors[i]
        
        f = interp1d(x, values['y'], kind='cubic')
        y_smooth = f(x_smooth)
        
        plt.plot(x_smooth, y_smooth, label=f'd = {label}', color=color, linewidth=2, alpha=0.8)
        plt.errorbar(x, values['y'], yerr=values['error'], fmt='o', capsize=5, color=color, alpha=0.5)

    plt.xlabel('Fuel Height (mm)', fontsize=12)
    plt.ylabel('Flame Speed (rad/s)', fontsize=12)
    plt.title('Flame Speed vs. Fuel Height for Different Distances (d)', fontsize=14)
    plt.legend(loc='best')
    plt.grid(True)
    
    plt.savefig('flame_speed_greyscale_plot.png')
    plt.show()

draw_exp()